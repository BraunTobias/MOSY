{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kira\\\\Documents\\\\University\\\\MS6\\\\MobileSysteme\\\\MOSY\\\\screens\\\\ProfileScreen.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from 'react-native-elements';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Camera } from \"expo-camera\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { LogInContext } from \"../data/LogInContext\";\nimport { FunctionsScreen } from \"../screens/FunctionsScreen\";\nexport default ProfileScreen = function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(LogInContext),\n      _useContext2 = _slicedToArray(_useContext, 4),\n      authentication = _useContext2[0],\n      setAuthentication = _useContext2[1],\n      user = _useContext2[2],\n      setUser = _useContext2[3];\n\n  var _useState = useState(user.username),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentName = _useState2[0],\n      setCurrentName = _useState2[1];\n\n  var _useState3 = useState(user.mail),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentMail = _useState4[0],\n      setCurrentMail = _useState4[1];\n\n  var _useState5 = useState(user.pw),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPW = _useState6[0],\n      setCurrentPW = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      acknowledgementVisibility = _useState8[0],\n      setAcknowledgementVisibility = _useState8[1];\n\n  var _useState9 = useState(user.functions),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentFunctions = _useState10[0],\n      setCurrentFunctions = _useState10[1];\n\n  var _useState11 = useState(user.interests),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentInterests = _useState12[0],\n      setCurrentInterests = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      functionsVisibility = _useState14[0],\n      setFunctionsVisibility = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      interestsVisibility = _useState16[0],\n      setInterestsVisibility = _useState16[1];\n\n  var changeNameHandler = function changeNameHandler(enteredText) {\n    setCurrentName(enteredText);\n  };\n\n  var changeMailHandler = function changeMailHandler(enteredText) {\n    setCurrentMail(enteredText);\n  };\n\n  var changePWHandler = function changePWHandler(enteredText) {\n    setCurrentPW(enteredText);\n  };\n\n  var changeFunctionsHandler = function changeFunctionsHandler(updatedFunctions) {\n    setCurrentFunctions(updatedFunctions);\n  };\n\n  var changeInterestsHandler = function changeInterestsHandler(updatedInterests) {\n    setCurrentInterests(updatedInterests);\n  };\n\n  var updateUserHandler = function updateUserHandler() {\n    setUser(function (user) {\n      return {\n        id: user.id,\n        username: currentName,\n        mail: currentMail,\n        image: selectedImage,\n        functions: currentFunctions,\n        interests: currentInterests\n      };\n    });\n    setAcknowledgementVisibility(true);\n    console.log(\"Updated User: \" + currentName + \" \" + currentMail + \" \" + currentPW);\n  };\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      imagePickerVisibility = _useState18[0],\n      setImagePickerVisibility = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isCameraOn = _useState20[0],\n      setIsCameraOn = _useState20[1];\n\n  var _useState21 = useState(Camera.Constants.Type.back),\n      _useState22 = _slicedToArray(_useState21, 2),\n      type = _useState22[0],\n      setType = _useState22[1];\n\n  var _useState23 = useState({\n    localUri: user.image\n  }),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedImage = _useState24[0],\n      setSelectedImage = _useState24[1];\n\n  var verifyPermissions = function verifyPermissions(permission) {\n    var result;\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(permission));\n\n          case 2:\n            result = _context.sent;\n\n            if (!(result.status !== \"granted\")) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Berechtigung verweigert!\", \"Dieses Feature ben√∂tigt weitere Berechtigungen.\", [{\n              text: \"Ok\"\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 8:\n            return _context.abrupt(\"return\", true);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var selectImageHandler = function selectImageHandler() {\n    var hasPermission, pickerResult;\n    return _regeneratorRuntime.async(function selectImageHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions(Permissions.CAMERA_ROLL));\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 7:\n            pickerResult = _context2.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context2.next = 10;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 10:\n            setSelectedImage({\n              localUri: pickerResult.uri\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var toggleCameraHandler = function toggleCameraHandler() {\n    var hasPermission;\n    return _regeneratorRuntime.async(function toggleCameraHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions(Permissions.CAMERA));\n\n          case 2:\n            hasPermission = _context3.sent;\n\n            if (hasPermission) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 5:\n            setIsCameraOn(!isCameraOn);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var flipCameraHandler = function flipCameraHandler() {\n    if (isCameraOn) {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  };\n\n  var authHandler = function authHandler(auth) {\n    if (auth) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-start',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, React.createElement(Modal, {\n        visible: acknowledgementVisibility,\n        animationType: \"slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      }, \"Gespeichert.\"), React.createElement(Button, {\n        title: \"OK\",\n        onPress: function onPress() {\n          return setAcknowledgementVisibility(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }\n      }))), React.createElement(Modal, {\n        visible: imagePickerVisibility,\n        animationType: \"slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, \"Foto aufnehmen\"), React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: styles.verticalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 41\n        }\n      }, \"mit Kamera aufnehmen\"), React.createElement(TouchableWithoutFeedback, {\n        style: [styles.imageTile, styles.cameraPreview],\n        onPress: toggleCameraHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 41\n        }\n      }, !isCameraOn ? React.createElement(Button, {\n        type: \"clear\",\n        onPress: toggleCameraHandler,\n        icon: React.createElement(Ionicons, {\n          name: \"ios-camera\",\n          size: 50,\n          color: \"rgb(0, 0, 0)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 53\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 49\n        }\n      }) : React.createElement(TouchableOpacity, {\n        onPress: flipCameraHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 45\n        }\n      }, React.createElement(View, {\n        style: {\n          borderRadius: 10,\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 49\n        }\n      }, React.createElement(Camera, {\n        style: styles.cameraPreview,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 49\n        }\n      })))))), React.createElement(Button, {\n        title: \"OK\",\n        onPress: function onPress() {\n          return setImagePickerVisibility(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 33\n        }\n      }, \"Profilbild:\"), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: selectedImage.localUri\n        },\n        style: [styles.imageTile, styles.cameraPreview],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 37\n        }\n      }), React.createElement(Button, {\n        type: \"clear\",\n        onPress: selectImageHandler,\n        icon: React.createElement(Ionicons, {\n          name: \"ios-folder-open\",\n          size: 50,\n          color: \"rgb(0, 0, 0)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 45\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 37\n        }\n      }), React.createElement(Button, {\n        type: \"clear\",\n        onPress: function onPress() {\n          return setImagePickerVisibility(true);\n        },\n        icon: React.createElement(Ionicons, {\n          name: \"ios-camera\",\n          size: 50,\n          color: \"rgb(0, 0, 0)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 45\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      })))), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 33\n        }\n      }, \"Benutzername:\"), React.createElement(TextInput, {\n        onChangeText: changeNameHandler,\n        value: currentName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }\n      }, \"E-Mail:\"), React.createElement(TextInput, {\n        onChangeText: changeMailHandler,\n        value: currentMail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }\n      }, \"Passwort:\"), React.createElement(TextInput, {\n        onChangeText: changePWHandler,\n        value: currentPW,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }))), React.createElement(Button, {\n        title: \"F\\xE4higkeiten\",\n        onPress: function onPress() {\n          return navigation.navigate('F√§higkeiten');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        title: \"Interessen\",\n        onPress: function onPress() {\n          return navigation.navigate('Interessen');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        title: \" \\xDCbernehmen\",\n        onPress: updateUserHandler,\n        icon: React.createElement(Ionicons, {\n          name: \"md-checkmark\",\n          size: 30,\n          color: \"rgb(255, 255, 255)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        title: \" Logout\",\n        onPress: function onPress() {\n          setUser(null);\n          console.log(\"setUser(null)\");\n          setAuthentication(false);\n          console.log(\"setAuthentication(false)\");\n        },\n        icon: React.createElement(Ionicons, {\n          name: \"md-log-out\",\n          size: 30,\n          color: \"rgb(255, 255, 255)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      return React.createElement(AuthenticationNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 22\n        }\n      });\n    }\n  };\n\n  return authHandler(authentication);\n};\nvar styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  },\n  touchable: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  },\n  verticalContainer: {\n    alignItems: \"center\"\n  },\n  cameraPreview: {\n    width: 100,\n    height: 100,\n    borderRadius: 10\n  },\n  imageTile: {\n    shadowColor: \"darkGrey\",\n    shadowOpacity: 0.2,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 10,\n    borderRadius: 10,\n    padding: 15,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Kira/Documents/University/MS6/MobileSysteme/MOSY/screens/ProfileScreen.js"],"names":["React","useState","useContext","Button","Ionicons","Camera","Permissions","ImagePicker","LogInContext","FunctionsScreen","ProfileScreen","navigation","authentication","setAuthentication","user","setUser","username","currentName","setCurrentName","mail","currentMail","setCurrentMail","pw","currentPW","setCurrentPW","acknowledgementVisibility","setAcknowledgementVisibility","functions","currentFunctions","setCurrentFunctions","interests","currentInterests","setCurrentInterests","functionsVisibility","setFunctionsVisibility","interestsVisibility","setInterestsVisibility","changeNameHandler","enteredText","changeMailHandler","changePWHandler","changeFunctionsHandler","updatedFunctions","changeInterestsHandler","updatedInterests","updateUserHandler","id","image","selectedImage","console","log","imagePickerVisibility","setImagePickerVisibility","isCameraOn","setIsCameraOn","Constants","Type","back","type","setType","localUri","setSelectedImage","verifyPermissions","permission","askAsync","result","status","Alert","alert","text","selectImageHandler","CAMERA_ROLL","hasPermission","launchImageLibraryAsync","pickerResult","cancelled","uri","toggleCameraHandler","CAMERA","flipCameraHandler","front","authHandler","auth","flex","justifyContent","alignItems","backgroundColor","styles","imageContainer","verticalContainer","imageTile","cameraPreview","borderRadius","overflow","flexDirection","Keyboard","dismiss","navigate","StyleSheet","create","view","position","touchable","width","height","shadowColor","shadowOpacity","shadowOffset","shadowRadius","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { \r\n    View, \r\n    Modal, \r\n    TouchableOpacity, \r\n    TouchableWithoutFeedback, \r\n    Text, \r\n    TextInput, \r\n    Keyboard, \r\n    Alert, \r\n    Image, \r\n    StyleSheet } from 'react-native';\r\nimport { Button } from 'react-native-elements';\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Camera } from \"expo-camera\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as ImagePicker from \"expo-image-picker\"\r\nimport { LogInContext } from '../data/LogInContext';\r\nimport { FunctionsScreen } from '../screens/FunctionsScreen';\r\n\r\n\r\nexport default ProfileScreen =  ({navigation})  => {\r\n    const [authentication, setAuthentication, user, setUser] = useContext(LogInContext);\r\n    const [currentName, setCurrentName] = useState(user.username);\r\n    const [currentMail, setCurrentMail] = useState(user.mail);\r\n    const [currentPW, setCurrentPW] = useState(user.pw);\r\n    const [acknowledgementVisibility, setAcknowledgementVisibility] = useState(false);\r\n    const [currentFunctions, setCurrentFunctions] = useState(user.functions);\r\n    const [currentInterests, setCurrentInterests] = useState(user.interests);\r\n    const [functionsVisibility, setFunctionsVisibility] = useState(false);\r\n    const [interestsVisibility, setInterestsVisibility] = useState(false);\r\n\r\n    // Benutzereingaben\r\n    const changeNameHandler = (enteredText) => {\r\n        setCurrentName(enteredText);\r\n    };\r\n    const changeMailHandler = (enteredText) => {\r\n        setCurrentMail(enteredText);\r\n    };\r\n    const changePWHandler = (enteredText) => {\r\n        setCurrentPW(enteredText);\r\n    };\r\n    const changeFunctionsHandler = (updatedFunctions) => {\r\n        setCurrentFunctions(updatedFunctions);\r\n    }\r\n    const changeInterestsHandler = (updatedInterests) => {\r\n        setCurrentInterests(updatedInterests);\r\n    }\r\n\r\n    // Benutzerprofil aktualisieren\r\n    const updateUserHandler = () => {\r\n        setUser(user => ({\r\n            id: user.id,\r\n            username: currentName,\r\n            mail: currentMail,\r\n            image: selectedImage,\r\n            functions: currentFunctions,\r\n            interests: currentInterests\r\n        }))\r\n        setAcknowledgementVisibility(true);\r\n        console.log(\"Updated User: \" + currentName + \" \" + currentMail + \" \" + currentPW);\r\n    };\r\n\r\n    // Profilbild\r\n    const [imagePickerVisibility, setImagePickerVisibility] = useState(false);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const [type, setType] = useState(Camera.Constants.Type.back);\r\n    const [selectedImage, setSelectedImage] = useState({ localUri: user.image });\r\n    const verifyPermissions = async (permission) => {\r\n        const result = await Permissions.askAsync(permission);\r\n        if (result.status !== \"granted\") {\r\n            Alert.alert(\r\n            \"Berechtigung verweigert!\",\r\n            \"Dieses Feature ben√∂tigt weitere Berechtigungen.\",\r\n            [{ text: \"Ok\" }]\r\n            );\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n    const selectImageHandler = async () => {\r\n        const hasPermission = await verifyPermissions(Permissions.CAMERA_ROLL);\r\n        if (!hasPermission) return;\r\n    \r\n        let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n        if (pickerResult.cancelled === true) return;\r\n        setSelectedImage({ localUri: pickerResult.uri });\r\n    };\r\n    const toggleCameraHandler = async () => {\r\n        const hasPermission = await verifyPermissions(Permissions.CAMERA);\r\n        if (!hasPermission) return;\r\n    \r\n        setIsCameraOn(!isCameraOn);\r\n    };\r\n    const flipCameraHandler = () => {\r\n        if (isCameraOn) {\r\n            setType(\r\n                type === Camera.Constants.Type.back\r\n                    ? Camera.Constants.Type.front\r\n                    : Camera.Constants.Type.back\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const authHandler = (auth) => {\r\n        if (auth) {\r\n            return ( \r\n                <View style={{flex:1, justifyContent: 'flex-start', alignItems: 'center'}}>\r\n                    <View style={{flex:1, justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Modal visible={acknowledgementVisibility} animationType='slide'>\r\n                            <View style={{flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white'}}>\r\n                                <Text>Gespeichert.</Text>\r\n                                <Button title='OK'onPress={() => setAcknowledgementVisibility(false)}/>\r\n                            </View>\r\n                        </Modal>\r\n                        \r\n                        <Modal visible={imagePickerVisibility} animationType='slide'>\r\n                            <View style={{flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'white'}}>\r\n                                <Text>Foto aufnehmen</Text>\r\n                                \r\n                                <View style={styles.imageContainer}>\r\n                                    <View style={styles.verticalContainer}>\r\n                                        <Text>mit Kamera aufnehmen</Text>\r\n                                        <TouchableWithoutFeedback \r\n                                            style={[styles.imageTile, styles.cameraPreview]}\r\n                                            onPress={toggleCameraHandler} >\r\n                                            {!isCameraOn ? (\r\n                                                <Button\r\n                                                type=\"clear\"\r\n                                                onPress={toggleCameraHandler}\r\n                                                icon={\r\n                                                    <Ionicons\r\n                                                        name=\"ios-camera\"\r\n                                                        size={50}\r\n                                                        color=\"rgb(0, 0, 0)\"\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                            ) : (\r\n                                            <TouchableOpacity onPress={flipCameraHandler}>\r\n                                                <View style={{ borderRadius: 10, overflow: \"hidden\" }}>\r\n                                                <Camera style={styles.cameraPreview} type={type} />\r\n                                                </View>\r\n                                            </TouchableOpacity>\r\n                                            )}\r\n                                        </TouchableWithoutFeedback>\r\n                                    </View>\r\n                                </View>\r\n\r\n                                <Button title='OK'onPress={() => setImagePickerVisibility(false)}/>\r\n                            </View>\r\n                        </Modal>\r\n                            \r\n                        {/* <Modal visible={functionsVisibility} animationType='slide'>\r\n                            < FunctionsScreen user={user} />\r\n                        </Modal> */}\r\n\r\n                        <TouchableWithoutFeedback>\r\n                            <View>\r\n                                <Text>Profilbild:</Text>\r\n                                <View style={{ flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-evenly\" }}>\r\n                                    <Image\r\n                                        source={{ uri: selectedImage.localUri}}\r\n                                        style={[styles.imageTile, styles.cameraPreview]} />\r\n                                    <Button\r\n                                        type=\"clear\"\r\n                                        onPress={selectImageHandler}\r\n                                        icon={\r\n                                            <Ionicons\r\n                                                name=\"ios-folder-open\"\r\n                                                size={50}\r\n                                                color=\"rgb(0, 0, 0)\"\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                    <Button\r\n                                        type=\"clear\"\r\n                                        onPress={() => setImagePickerVisibility(true)}\r\n                                        icon={\r\n                                            <Ionicons\r\n                                                name=\"ios-camera\"\r\n                                                size={50}\r\n                                                color=\"rgb(0, 0, 0)\"\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                        \r\n                        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n                            <View>\r\n                                <Text>Benutzername:</Text>\r\n                                <TextInput\r\n                                    onChangeText={changeNameHandler}\r\n                                    value={currentName}\r\n                                />\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                        \r\n                        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n                            <View>\r\n                                <Text>E-Mail:</Text>\r\n                                <TextInput\r\n                                    onChangeText={changeMailHandler}\r\n                                    value={currentMail}\r\n                                />\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                        \r\n                        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n                            <View>\r\n                                <Text>Passwort:</Text>\r\n                                <TextInput\r\n                                    onChangeText={changePWHandler}\r\n                                    value={currentPW}\r\n                                    secureTextEntry={true} \r\n                                />\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n\r\n                        <Button\r\n                            title=\"F√§higkeiten\"\r\n                            onPress={() =>\r\n                                navigation.navigate('F√§higkeiten')\r\n                            }\r\n                        />\r\n\r\n                        <Button\r\n                            title=\"Interessen\"\r\n                            onPress={() =>\r\n                                navigation.navigate('Interessen')\r\n                            }\r\n                        />\r\n\r\n                        <Button\r\n                            title= \" √úbernehmen\"\r\n                            onPress={updateUserHandler}\r\n                            icon={\r\n                                <Ionicons\r\n                                    name=\"md-checkmark\"\r\n                                    size={30}\r\n                                    color=\"rgb(255, 255, 255)\"\r\n                                />\r\n                            }\r\n                        />\r\n                        \r\n                        <Button \r\n                            title= \" Logout\"\r\n                            onPress={() => {\r\n                                setUser(null)\r\n                                console.log(\"setUser(null)\")\r\n                                setAuthentication(false)\r\n                                console.log(\"setAuthentication(false)\")\r\n                            }}\r\n                            icon={\r\n                                <Ionicons\r\n                                    name=\"md-log-out\"\r\n                                    size={30}\r\n                                    color=\"rgb(255, 255, 255)\"\r\n                                />\r\n                            }\r\n                        />\r\n                    </View>\r\n                </View>\r\n             )\r\n        } else {\r\n            return ( <AuthenticationNavigator /> )\r\n        }\r\n    }\r\n\r\n    return(\r\n        authHandler(authentication)\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n      position: 'absolute',\r\n      backgroundColor: 'transparent'\r\n    },\r\n    touchable: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    imageContainer: {\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-evenly\",\r\n      },\r\n    verticalContainer: {\r\n        alignItems: \"center\",\r\n    },\r\n    cameraPreview: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 10,\r\n    },\r\n    imageTile: {\r\n        shadowColor: \"darkGrey\",\r\n        shadowOpacity: 0.2,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowRadius: 10,\r\n        borderRadius: 10,\r\n        padding: 15,\r\n        backgroundColor: \"white\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginBottom: 30,\r\n      }\r\n})"]},"metadata":{},"sourceType":"module"}